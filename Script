-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- FOV settings
local fovSizes = {80, 120, 180}
local fovIndex = 1
local currentFov = fovSizes[fovIndex]

-- Drawing FOV
local fovCircle = Drawing.new("Circle")
fovCircle.Color = Color3.fromRGB(160, 32, 240)
fovCircle.Thickness = 2
fovCircle.Transparency = 0.5
fovCircle.Filled = false
fovCircle.Radius = currentFov
fovCircle.Visible = true

-- FOV Text
local fovText = Drawing.new("Text")
fovText.Position = Vector2.new(10, Camera.ViewportSize.Y - 40)
fovText.Size = 24
fovText.Center = false
fovText.Outline = true
fovText.Color = Color3.fromRGB(255, 255, 255)
fovText.Text = "FOV: " .. currentFov .. " ðŸŽ¯"
fovText.Visible = true

-- GUI Setup
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "AimbotESPUI"
gui.ResetOnSpawn = false

local background = Instance.new("Frame")
background.Size = UDim2.new(0, 500, 0, 300)
background.Position = UDim2.new(0.5, -250, 0.5, -150)
background.BackgroundColor3 = Color3.fromRGB(0, 50, 50)
background.BackgroundTransparency = 0.3
background.BorderSizePixel = 0
background.Parent = gui
background.Active = true
background.Visible = true

local dragging, dragInput, dragStart, startPos
background.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = background.Position
	end
end)

background.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = false
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
		local delta = input.Position - dragStart
		background.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

-- Tabs and Button Creation
local function createTabButton(text, yOffset, parent)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(0, 100, 0, 40)
	btn.Position = UDim2.new(0, 10, 0, yOffset)
	btn.BackgroundColor3 = Color3.fromRGB(20, 20, 80)
	btn.TextColor3 = Color3.new(1,1,1)
	btn.TextSize = 18
	btn.Font = Enum.Font.SourceSansBold
	btn.Text = text
	btn.Parent = parent
	btn.AutoButtonColor = true
	btn.BorderSizePixel = 0
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
	return btn
end

-- Tabs Setup
local tabButtonFrame = Instance.new("Frame")
tabButtonFrame.Size = UDim2.new(0, 120, 0, 300)
tabButtonFrame.Position = UDim2.new(0, 0, 0, 0)
tabButtonFrame.BackgroundColor3 = Color3.fromRGB(0, 50, 50)
tabButtonFrame.BackgroundTransparency = 0.5
tabButtonFrame.BorderSizePixel = 0
tabButtonFrame.Parent = background
tabButtonFrame.Active = true

local aimbotTab = Instance.new("Frame")
aimbotTab.Size = UDim2.new(0, 380, 0, 300)
aimbotTab.Position = UDim2.new(0, 120, 0, 0)
aimbotTab.BackgroundColor3 = Color3.fromRGB(0, 50, 50)
aimbotTab.BackgroundTransparency = 0.5
aimbotTab.Visible = false
aimbotTab.Parent = background

local visualsTab = Instance.new("Frame")
visualsTab.Size = UDim2.new(0, 380, 0, 300)
visualsTab.Position = UDim2.new(0, 120, 0, 0)
visualsTab.BackgroundColor3 = Color3.fromRGB(0, 50, 50)
visualsTab.BackgroundTransparency = 0.5
visualsTab.Visible = true
visualsTab.Parent = background

local espBtn = createTabButton("ESP", 10, tabButtonFrame)
local aimbotBtn = createTabButton("Aimbot", 60, tabButtonFrame)

-- Buttons for Aimbot Tab
local aimbotEnableBtn = Instance.new("TextButton")
aimbotEnableBtn.Size = UDim2.new(0, 200, 0, 40)
aimbotEnableBtn.Position = UDim2.new(0, 10, 0, 10)
aimbotEnableBtn.BackgroundColor3 = Color3.fromRGB(20, 20, 80)
aimbotEnableBtn.TextColor3 = Color3.new(1,1,1)
aimbotEnableBtn.TextSize = 18
aimbotEnableBtn.Font = Enum.Font.SourceSansBold
aimbotEnableBtn.Text = "Toggle Aimbot (ON)"
aimbotEnableBtn.Parent = aimbotTab
aimbotEnableBtn.AutoButtonColor = true
aimbotEnableBtn.BorderSizePixel = 0

local boneSelectionBtn = Instance.new("TextButton")
boneSelectionBtn.Size = UDim2.new(0, 200, 0, 40)
boneSelectionBtn.Position = UDim2.new(0, 10, 0, 60)
boneSelectionBtn.BackgroundColor3 = Color3.fromRGB(20, 20, 80)
boneSelectionBtn.TextColor3 = Color3.new(1, 1, 1)
boneSelectionBtn.TextSize = 18
boneSelectionBtn.Font = Enum.Font.SourceSansBold
boneSelectionBtn.Text = "Bone: Head"
boneSelectionBtn.Parent = aimbotTab
boneSelectionBtn.AutoButtonColor = true
boneSelectionBtn.BorderSizePixel = 0

local selectedBone = "Head"

-- Buttons for Visuals Tab
local espEnableBtn = Instance.new("TextButton")
espEnableBtn.Size = UDim2.new(0, 200, 0, 40)
espEnableBtn.Position = UDim2.new(0, 10, 0, 10)
espEnableBtn.BackgroundColor3 = Color3.fromRGB(20, 20, 80)
espEnableBtn.TextColor3 = Color3.new(1,1,1)
espEnableBtn.TextSize = 18
espEnableBtn.Font = Enum.Font.SourceSansBold
espEnableBtn.Text = "Toggle ESP (ON)"
espEnableBtn.Parent = visualsTab
espEnableBtn.AutoButtonColor = true
espEnableBtn.BorderSizePixel = 0

-- Color Selector for ESP
local colors = {
	["Red"] = Color3.fromRGB(255, 0, 0),
	["Green"] = Color3.fromRGB(0, 255, 0),
	["Blue"] = Color3.fromRGB(0, 0, 255),
	["Yellow"] = Color3.fromRGB(255, 255, 0),
	["Purple"] = Color3.fromRGB(160, 32, 240),
	["Orange"] = Color3.fromRGB(255, 165, 0),
	["Cyan"] = Color3.fromRGB(0, 255, 255),
	["Pink"] = Color3.fromRGB(255, 105, 180),
	["White"] = Color3.fromRGB(255, 255, 255)
}
local colorNames = {}
for k in pairs(colors) do table.insert(colorNames, k) end
local currentColorIndex = 1

local changeColorBtn = Instance.new("TextButton")
changeColorBtn.Size = UDim2.new(0, 200, 0, 40)
changeColorBtn.Position = UDim2.new(0, 10, 0, 60)
changeColorBtn.BackgroundColor3 = Color3.fromRGB(20, 20, 80)
changeColorBtn.TextColor3 = Color3.new(1,1,1)
changeColorBtn.TextSize = 18
changeColorBtn.Font = Enum.Font.SourceSansBold
changeColorBtn.Text = "ESP Color: " .. colorNames[currentColorIndex]
changeColorBtn.Parent = visualsTab
changeColorBtn.AutoButtonColor = true
changeColorBtn.BorderSizePixel = 0

-- GUI Tab Switching
espBtn.MouseButton1Click:Connect(function()
	visualsTab.Visible = true
	aimbotTab.Visible = false
end)

aimbotBtn.MouseButton1Click:Connect(function()
	visualsTab.Visible = false
	aimbotTab.Visible = true
end)

-- GUI Logic States
local espEnabled = true
local aimbotEnabled = true

-- ESP Logic
local espColor = colors[colorNames[currentColorIndex]]
local highlights = {}

function createCham(player)
	if player.Character and not highlights[player] then
		local h = Instance.new("Highlight")
		h.Adornee = player.Character
		h.FillColor = espColor
		h.OutlineColor = Color3.fromRGB(0, 0, 0)
		h.FillTransparency = 0.4
		h.OutlineTransparency = 0
		h.Parent = game.CoreGui
		highlights[player] = h
	end
end

function removeCham(player)
	if highlights[player] then
		highlights[player]:Destroy()
		highlights[player] = nil
	end
end
function updateESP()
	for _, player in ipairs(game.Players:GetPlayers()) do
		if player ~= game.Players.LocalPlayer then
			if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				createCham(player)
			else
				removeCham(player)
			end
		end
	end
end

-- Auto-refresh ESP every second
task.spawn(function()
	while true do
		task.wait(1)
		updateESP()
	end
end)


-- Aimbot Logic
local aiming = false
local stickyAim = false
local stickyTarget = nil

UserInputService.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton2 and aimbotEnabled then
		aiming = true
	end
	if input.KeyCode == Enum.KeyCode.LeftAlt then
		fovIndex = (fovIndex % #fovSizes) + 1
		currentFov = fovSizes[fovIndex]
		fovCircle.Radius = currentFov
		fovText.Text = "FOV: " .. currentFov .. " ðŸŽ¯"
	end
	if input.KeyCode == Enum.KeyCode.Insert then
		background.Visible = not background.Visible
	end
end)

UserInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton2 then
		aiming = false
	end
end)

function getClosestBone()
	local closest, dist = nil, math.huge
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character then
			local bone
			if selectedBone == "Head" and player.Character:FindFirstChild("Head") then
				bone = player.Character.Head
			elseif selectedBone == "Waist" and player.Character:FindFirstChild("HumanoidRootPart") then
				bone = player.Character.HumanoidRootPart
			end
			if bone then
				local screenPos, onScreen = Camera:WorldToViewportPoint(bone.Position)
				if onScreen then
					local mouse = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
					local d = (Vector2.new(screenPos.X, screenPos.Y) - mouse).Magnitude
					if d < currentFov and d < dist then
						closest, dist = bone, d
					end
				end
			end
		end
	end
	return closest
end

RunService.RenderStepped:Connect(function()
	fovCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
	fovCircle.Visible = aimbotEnabled
	fovText.Visible = aimbotEnabled

	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer then
			if espEnabled then createCham(player) else removeCham(player) end
		end
	end

	if aiming then
	local target
	if stickyAim and stickyTarget and stickyTarget:FindFirstChild("Humanoid") and stickyTarget.Humanoid.Health > 0 then
		target = getClosestBoneFromPlayer(stickyTarget)
	else
		target = getClosestBone()
		if stickyAim then
			for _, player in ipairs(Players:GetPlayers()) do
				if player.Character and (player.Character:FindFirstChild("Head") or player.Character:FindFirstChild("HumanoidRootPart")) then
					local bone = selectedBone == "Head" and player.Character:FindFirstChild("Head") or player.Character:FindFirstChild("HumanoidRootPart")
					if bone == target then
						stickyTarget = player
					end
				end
			end
		end
	end
	if target then
		Camera.CFrame = CFrame.new(Camera.CFrame.Position, target.Position)
	end
end

end)

-- Toggles and Color Change
espEnableBtn.MouseButton1Click:Connect(function()
	espEnabled = not espEnabled
	espEnableBtn.Text = espEnabled and "Toggle ESP (ON)" or "Toggle ESP (OFF)"
end)

aimbotEnableBtn.MouseButton1Click:Connect(function()
	aimbotEnabled = not aimbotEnabled
	aimbotEnableBtn.Text = aimbotEnabled and "Toggle Aimbot (ON)" or "Toggle Aimbot (OFF)"
end)

boneSelectionBtn.MouseButton1Click:Connect(function()
	selectedBone = selectedBone == "Head" and "Waist" or "Head"
	boneSelectionBtn.Text = "Bone: " .. selectedBone
end)

changeColorBtn.MouseButton1Click:Connect(function()
	currentColorIndex = (currentColorIndex % #colorNames) + 1
	local newColorName = colorNames[currentColorIndex]
	espColor = colors[newColorName]
	changeColorBtn.Text = "ESP Color: " .. newColorName
	for _, h in pairs(highlights) do
		h.FillColor = espColor
	end
end)
